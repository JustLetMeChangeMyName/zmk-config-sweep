// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../config/keypos_34keys.h"

#define DEFAULT 0
#define RIGHTL   1
#define LEFTL    2
#define SYSL  3
#define NUML     4



// Home row mods macro
#define HRML(k1,k2,k3) &ht LALT k1  &ht LCTRL k2  &ht LGUI k3
#define HRMR(k1,k2,k3) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3


&sk {  // sticky-key config
    release-after-ms = <600>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};


/ {

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        
        tds: tap_dance_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHIFT>, <&caps_word>;
        };
        
//        ntd: num_tap_dance {
//            compatible = "zmk,behavior-tap-dance";
//            label = "NUM_TAP_DANCE";
//            #binding-cells = <0>;
//            tapping-term-ms = <300>;
//            bindings = <&lt LEFTL BSPC>, <&tog NUML>;
//    };

        
//        fslexcl: fsl_excl {
//            compatible = "zmk,behavior-mod-morph";
//            label = "FSL_EXCL";
//            #binding-cells = <0>;
//            bindings = <&kp FSLH>, <&kp EXCL>;
//            mods = <(MOD_RSFT)>;
//        };
        
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <RIGHTL LEFTL>;
            then-layer = <SYSL>;
        };
    };
    
    
//  key position reference
//  ╭─────────────────────┬─────────────────────╮
//  │ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
//  │ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 │
//  │ LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 │
//  ╰───────────╮ LH1 LH0 │ RH0 RH1 ╭───────────╯
//              ╰─────────┴─────────╯

     combos {
        compatible = "zmk,combos";
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <LT4 LT3>;
            bindings = <&kp ESC>;
        };
        
        combo_del {
            timeout-ms = <50>;
            key-positions = <LT3 LT2>;
            bindings = <&kp DEL>;
            layers = <DEFAULT>;
        };
        
        combo_tab {
            timeout-ms = <50>;
            key-positions = <LM4 LM3>;
            bindings = <&kp TAB>;
            layers = <DEFAULT>;
        };
        
        combo_word_backspace {
            timeout-ms = <50>;
            key-positions = <LH1 RH1>;
            bindings = <&kp LC(BSPC)>;
            layers = <DEFAULT>;
        };

        combo_minus {
            timeout-ms = <50>;
            key-positions = <LT0 LT1>;
            bindings = <&kp MINUS>;
            layers = <NUML>;
        };

        combo_divide {
            timeout-ms = <50>;
            key-positions = <LM0 LM1>;
            bindings = <&kp SLASH>;
            layers = <NUML>;
        };
        
        combo_quote {
            timeout-ms = <50>;
            key-positions = <LB0 LB1>;
            bindings = <&kp DQT>;
            layers = <NUML>;
        };
        
        combo_num_layer {
            timeout-ms = <50>;
            key-positions = <LM1 LM3>;
            bindings = <&tog NUML>;
            layers = <DEFAULT NUML>;
        };
        
        combo_ctrl_f {
            timeout-ms = <50>;
            key-positions = <LT2 LM2>;
            bindings = <&kp LC(F)>;
        };
        
        combo_at {
            timeout-ms = <50>;
            key-positions = <LM4 LM1>;
            bindings = <&kp AT>;
        };


    };
    
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  F       │  P       │  G       │   │  J       │  L       │  U       │  Y       │  :       │
            &kp Q      &kp W      &kp F      &kp P      &kp G          &kp J      &kp L      &kp U      &kp Y      &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  R       │  S       │  T       │  D       │   │  H       │  N       │  E       │  I       │  O       │
            &kp A      HRML(R,         S,         T)     &kp D         &kp H      HRMR(N,        E,         I)     &kp O
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  K       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp K      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 |          |          |   |          |          |
                                          &lt LEFTL BSPC &tds          &kp ENTER  &lt RIGHTL SPACE
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ INSERT   │  7       │  8       │  9       │          │   │ PAGE UP  │  HOME    │  UP      │ END      │          │
            &kp INS    &kp N7     &kp N8     &kp N9     &trans         &kp PG_UP  &kp HOME   &kp UARW   &kp END    &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ DELETE   │  4       │  5       │  6       │          │   │ PAGE DN  │ LEFT     │ DOWN     │ RIGHT    │  =       │
            &kp DEL    &kp N4     &kp N5     &kp N6     &trans         &kp PG_DN  &kp LARW   &kp DARW   &kp RARW   &kp EQUAL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ CAPS     │  1       │  2       │  3       │  0       │   │ . >      │  +       │  -       │  *       │  /       │
           &caps_word  &kp N1     &kp N2     &kp N3     &kp N0         &kp DOT    &kp PLUS   &kp MINUS  &kp ASTRK  &kp SLASH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 |          |  0       |   |          |          |
                                             &trans     &kp N0        &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │  [       │  {       │  }       │          │   │  ^       │  (       │  )       │  ]       │  ~       │
            &trans     &kp LBKT   &kp LBRC   &kp RBRC   &trans         &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT   &kp TILDE
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  !       │  @       │  #       │  $       │  %       │   │          │          │  =       │  \       │  '       │
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &trans     &trans     &kp EQUAL  &kp BSLH   &kp APOS
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  PSCRN   │          │          │          │          │   │  &       │  _       │          │  │       │          │
            &kp PSCRN  &trans     &trans     &trans     &trans         &kp AMPS   &kp UNDER  &trans     &kp PIPE   &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 |          |          |   |          |          |
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │BOOTLOADER│
          &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
            &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 |          |          |   |          |          |
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
        
        num_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  .       │  7       │  8       │  9       │  +       │   │ PAGE UP  │  HOME    │  UP      │ END      │          │
            &kp DOT    &kp N7     &kp N8     &kp N9     &kp PLUS       &kp PG_UP  &kp HOME   &kp UARW   &kp END    &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  =       │  4       │  5       │  6       │  *       │   │ PAGE DN  │ LEFT     │ DOWN     │ RIGHT    │  =       │
            &kp EQUAL  &kp N4     &kp N5     &kp N6     &kp ASTRK      &kp PG_DN  &kp LARW   &kp DARW   &kp RARW   &kp EQUAL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ /        │  1       │  2       │  3       │ 0        │   │ . >      │  +       │  -       │  *       │  /       │
            &kp SLASH  &kp N1     &kp N2     &kp N3     &kp N0         &kp DOT    &kp PLUS   &kp MINUS  &kp ASTRK  &kp SLASH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
        //                                 |          |          |   |          |          |
                                             &kp BSPC   &kp SPACE      &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

    };
};
